module mostrar_carta_random (
    input  logic        clk,
    input  logic        rst,
    input  logic        start,
    input  logic [4:0]  arr_cards_in [0:15],
    output logic [4:0]  arr_cards_out [0:15],
    output logic        done
);

    // ------------------------------------------------------
    // Variables internas
    // ------------------------------------------------------
    logic running;
    integer i, count_01;
    logic [3:0] idx_counter;      // contador 0..15
    logic [4:0] temp_arr[0:15];
    logic [3:0] selected_count;

    // ------------------------------------------------------
    // Proceso secuencial
    // ------------------------------------------------------
    always_ff @(posedge clk or posedge rst) begin
        if (rst) begin
            done <= 0;
            running <= 0;
            idx_counter <= 0;
            selected_count <= 0;
            for (i = 0; i < 16; i++)
                arr_cards_out[i] <= 0;
        end else begin
            if (start && !running) begin
                running <= 1;
                done <= 0;
                idx_counter <= 0;
                selected_count <= 0;
                // Copiar el arreglo de entrada
                for (i = 0; i < 16; i++)
                    temp_arr[i] = arr_cards_in[i];
            end

            if (running) begin
                // Contar cartas con estado 01
                count_01 = 0;
                for (i = 0; i < 16; i++)
                    if (temp_arr[i][1:0] == 2'b01)
                        count_01 = count_01 + 1;

                // Aplicar reglas según count_01
                if (count_01 < 2) begin
                    selected_count = 0;
                    // Recorrer arreglo con idx_counter
                    for (i = 0; i < 16 && selected_count < (count_01==0?2:1); i++) begin
                        idx_counter = i;
                        if (temp_arr[idx_counter][1:0] == 2'b00) begin
                            temp_arr[idx_counter][1:0] = 2'b10;
                            selected_count = selected_count + 1;
                        end
                    end
                end
                // si count_01 == 2 → no hacer nada

                // Actualizar salida y done
                for (i = 0; i < 16; i++)
                    arr_cards_out[i] <= temp_arr[i];

                done <= 1;
                running <= 0;
            end
        end
    end

endmodule
